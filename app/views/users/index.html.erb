<% provide(:title, "All users") %>
<h1>All users</h1>

<%= will_paginate %>

<!-- <ul class="users">
	<%# @users.each do |user| %>
		<%#= render user %>   
	<%# end %>	
</ul> 
   this will work. Not refactored enough can call render directly on the @users variable -->

<ul class="users">
	<%= render @users %>
		<!-- Here Rails infers that @users is a list of User objects; moreover, when called
		with a collection of users, Rails automatically iterates through them and renders
		each one with the _user.html.erb partial. The result is the impressively
		compact code -->
</ul>

<%= will_paginate %>

<!-- The will_paginate method is a little magical; inside a users view, it
	automatically looks for an @users object, and then displays pagination links
	to access other pages. For this code to work @users must contain the users
	generated by the paginate method (from will_paginate) in app/controllers/users_controller.rb,
	NOT the @users = User.all
	'will_paginate' is above and below the list so that the navigation icons are both above
	and below the list
	 -->
